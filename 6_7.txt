diff --git a/src/main/java/com/example/Widget.java b/src/main/java/com/example/Widget.java
index d36d27d..e004fd8 100644
--- a/src/main/java/com/example/Widget.java
+++ b/src/main/java/com/example/Widget.java
@@ -8,6 +8,9 @@ public class Widget {
     private int x;
     private int y;
 
+    public Widget() {
+    }
+
     public Widget(String color, int x, int y) {
         this.color = color;
         this.x = x;
diff --git a/src/main/java/com/example/WidgetController.java b/src/main/java/com/example/WidgetController.java
index 616948f..b82b813 100644
--- a/src/main/java/com/example/WidgetController.java
+++ b/src/main/java/com/example/WidgetController.java
@@ -1,10 +1,7 @@
 package com.example;
 
 import org.springframework.http.MediaType;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestMethod;
-import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.bind.annotation.*;
 
 /**
  * Created by tbradfute on 1/24/17.
@@ -23,4 +20,8 @@ public class WidgetController {
         return new Widget(color, 10, 7);
     }
 
+    @RequestMapping(value = "/position", method = RequestMethod.POST, produces = {MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE})
+    public Widget setWidgetAll(@RequestBody Widget w) {
+        return w;
+    }
 }
diff --git a/src/test/java/com/example/DemoApplicationTests.java b/src/test/java/com/example/DemoApplicationTests.java
index 79c1bca..7d92143 100644
--- a/src/test/java/com/example/DemoApplicationTests.java
+++ b/src/test/java/com/example/DemoApplicationTests.java
@@ -1,5 +1,6 @@
 package com.example;
 
+import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -23,10 +24,22 @@ import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.
 @SpringBootTest
 @AutoConfigureMockMvc
 public class DemoApplicationTests {
+	private final static String APPLICATION_XML_UTF8 = "application/xml;charset=UTF-8";
 
 	@Autowired
 	private MockMvc mvc;
 
+	public static String asJsonString(final Object obj) {
+		try {
+			final ObjectMapper mapper = new ObjectMapper();
+			final String jsonContent = mapper.writeValueAsString(obj);
+			System.out.println("Returning "+jsonContent);
+			return jsonContent;
+		} catch (Exception e) {
+			throw new RuntimeException(e);
+		}
+	}
+
 	@Test
 	public void getWidget() throws Exception {
 		mvc.perform(MockMvcRequestBuilders.get("/widget").accept(MediaType.APPLICATION_JSON))
@@ -41,7 +54,7 @@ public class DemoApplicationTests {
 	public void getWidgetAsXml() throws Exception {
 		mvc.perform(MockMvcRequestBuilders.get("/widget").accept(MediaType.APPLICATION_XML))
 				.andExpect(status().isOk())
-				.andExpect(content().contentType("application/xml;charset=UTF-8"))
+				.andExpect(content().contentType(APPLICATION_XML_UTF8))
 				.andExpect(xpath("/Widget/color").string("Green"))
 				.andExpect(xpath("/Widget/x").string("10"))
 				.andExpect(xpath("/Widget/y").string("7"));
@@ -51,7 +64,7 @@ public class DemoApplicationTests {
 	public void postWidgetGetXml() throws Exception {
 		mvc.perform(MockMvcRequestBuilders.post("/widget/color/blue").accept(MediaType.APPLICATION_XML))
 				.andExpect(status().isOk())
-				.andExpect(content().contentType("application/xml;charset=UTF-8"))
+				.andExpect(content().contentType(APPLICATION_XML_UTF8))
 				.andExpect(xpath("/Widget/color").string("blue"))
 				.andExpect(xpath("/Widget/x").string("10"))
 				.andExpect(xpath("/Widget/y").string("7"));
@@ -66,4 +79,35 @@ public class DemoApplicationTests {
 				.andExpect(jsonPath("$.x", is(10)))
 				.andExpect(jsonPath("$.y", is(7)));
 	}
+
+	@Test
+	public void postWidgetAsJsonGetJson() throws Exception {
+		Widget w = new Widget("blue", 10, 7);
+
+		mvc.perform(MockMvcRequestBuilders.post("/widget/position")
+				.accept(MediaType.APPLICATION_JSON)
+				.contentType(MediaType.APPLICATION_JSON)
+				.content(asJsonString(w))
+		)
+				.andExpect(status().isOk())
+				.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))
+				.andExpect(jsonPath("$.color", is("blue")))
+				.andExpect(jsonPath("$.x", is(10)))
+				.andExpect(jsonPath("$.y", is(7)));
+	}
+
+	@Test
+	public void postWidgetAsXmlGetXml() throws Exception {
+		mvc.perform(MockMvcRequestBuilders.post("/widget/position")
+						.accept(MediaType.APPLICATION_XML)
+						.contentType(MediaType.APPLICATION_XML)
+						.content("<Widget><color>blue</color><x>42</x><y>43</y></Widget>")
+		)
+				.andExpect(status().isOk())
+				.andExpect(content().contentType(APPLICATION_XML_UTF8))
+				.andExpect(xpath("/Widget/color").string("blue"))
+				.andExpect(xpath("/Widget/x").string("42"))
+				.andExpect(xpath("/Widget/y").string("43"));
+
+	}
 }
