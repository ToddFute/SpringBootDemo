diff --git a/src/main/java/com/example/WidgetController.java b/src/main/java/com/example/WidgetController.java
index 79ffd43..616948f 100644
--- a/src/main/java/com/example/WidgetController.java
+++ b/src/main/java/com/example/WidgetController.java
@@ -1,6 +1,7 @@
 package com.example;
 
 import org.springframework.http.MediaType;
+import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.RestController;
@@ -16,4 +17,10 @@ public class WidgetController {
     public Widget index() {
         return new Widget("Green", 10, 7);
     }
+
+    @RequestMapping(value="/color/{color}", method = RequestMethod.POST, produces = {MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE})
+    public Widget setWidgetColor(@PathVariable String color) {
+        return new Widget(color, 10, 7);
+    }
+
 }
diff --git a/src/test/java/com/example/DemoApplicationTests.java b/src/test/java/com/example/DemoApplicationTests.java
index 8b3cb56..79c1bca 100644
--- a/src/test/java/com/example/DemoApplicationTests.java
+++ b/src/test/java/com/example/DemoApplicationTests.java
@@ -46,4 +46,24 @@ public class DemoApplicationTests {
 				.andExpect(xpath("/Widget/x").string("10"))
 				.andExpect(xpath("/Widget/y").string("7"));
 	}
+
+	@Test
+	public void postWidgetGetXml() throws Exception {
+		mvc.perform(MockMvcRequestBuilders.post("/widget/color/blue").accept(MediaType.APPLICATION_XML))
+				.andExpect(status().isOk())
+				.andExpect(content().contentType("application/xml;charset=UTF-8"))
+				.andExpect(xpath("/Widget/color").string("blue"))
+				.andExpect(xpath("/Widget/x").string("10"))
+				.andExpect(xpath("/Widget/y").string("7"));
+	}
+
+	@Test
+	public void postWidgetGetJson() throws Exception {
+		mvc.perform(MockMvcRequestBuilders.post("/widget/color/blue").accept(MediaType.APPLICATION_JSON))
+				.andExpect(status().isOk())
+				.andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))
+				.andExpect(jsonPath("$.color", is("blue")))
+				.andExpect(jsonPath("$.x", is(10)))
+				.andExpect(jsonPath("$.y", is(7)));
+	}
 }
